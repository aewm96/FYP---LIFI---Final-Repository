clc;
%clear;
close all;
f = 100e3;
tsw = 1/f;
% x='PWM=255';
% [time, channel_1, channel_2]=LTspice_reader(x);
figure;
subplot(5,1,1);
plot(time, PWM_0_2); 
title('CH2: Photodiode');
xlim([10.73 10.74])                                           % Sets xaxis limits to the 3 cycles
% set(gca,'TickLabelInterpreter', 'latex');                                   % Sets font to latex (set this to font used in your document)
% xticks([-2*10^-4 -1*10^-4 0 1*10^-4 2*10^-4 3*10^-4]);             % Set points on x axis to where labels will occur
% xticklabels({'$-2$', '$-1$','$0$', '$1$', '$2$', '$3$'})     % Sets what will be shown at each point
% ylim([-0.5 5])% Set yaxis between 0 to 1
% CH1max=max(channel_1);
% CH1min=min(channel_1);
% yticks([CH1min 2.5 CH1max])                                                               % Set points on y axis to where labels will occur                 
% yticklabels({'$Symbol Low $','$ $','$Symbol High $'}) 

box off   % Show only the X and Y axis

ylabel('$v_{}(t)$','interpreter','latex')                                 % States what the y axis is called
set(get(gca, 'YLabel'), 'Rotation', 0);                                     % Makes it vertical opposed to horizontal
ylabh = get(gca,'ylabel');                                                   
set(ylabh,'Units','normalized');                                            % Normalised units as opposed to datapoints
set(ylabh,'position',get(ylabh,'position') - [0.04 0.1 0]);                 % Moves the y axis label further left and down [x,y,z] - coordinates

subplot(5,1,2);
plot(time, PWM_64_2); 
% title('CH1: Emitter PWM = 64');
xlim([10.73 10.74])                                           % Sets xaxis limits to the 3 cycles
% set(gca,'TickLabelInterpreter', 'latex');                                   % Sets font to latex (set this to font used in your document)
% xticks([-2*10^-4 -1*10^-4 0 1*10^-4 2*10^-4 3*10^-4]);             % Set points on x axis to where labels will occur
% xticklabels({'$-2$', '$-1$','$0$', '$1$', '$2$', '$3$'})     % Sets what will be shown at each point
% ylim([-0.5 5])% Set yaxis between 0 to 1
% CH1max=max(channel_1);
% CH1min=min(channel_1);
% yticks([CH1min 2.5 CH1max])                                                               % Set points on y axis to where labels will occur                 
% yticklabels({'$Symbol Low $','$ $','$Symbol High $'}) 

box off   % Show only the X and Y axis

ylabel('$v_{}(t)$','interpreter','latex')                                 % States what the y axis is called
set(get(gca, 'YLabel'), 'Rotation', 0);                                     % Makes it vertical opposed to horizontal
ylabh = get(gca,'ylabel');                                                   
set(ylabh,'Units','normalized');                                            % Normalised units as opposed to datapoints
set(ylabh,'position',get(ylabh,'position') - [0.04 0.1 0]);                 % Moves the y axis label further left and down [x,y,z] - coordinates

subplot(5,1,3);
plot(time, PWM_127_2); 
% title('CH1: Emitter PWM = 127');
xlim([10.73 10.74])                                           % Sets xaxis limits to the 3 cycles
% set(gca,'TickLabelInterpreter', 'latex');                                   % Sets font to latex (set this to font used in your document)
% xticks([-2*10^-4 -1*10^-4 0 1*10^-4 2*10^-4 3*10^-4]);             % Set points on x axis to where labels will occur
% xticklabels({'$-2$', '$-1$','$0$', '$1$', '$2$', '$3$'})     % Sets what will be shown at each point
% ylim([-0.5 5])% Set yaxis between 0 to 1
% CH1max=max(channel_1);
% CH1min=min(channel_1);
% yticks([CH1min 2.5 CH1max])                                                               % Set points on y axis to where labels will occur                 
% yticklabels({'$Symbol Low $','$ $','$Symbol High $'}) 

box off   % Show only the X and Y axis

ylabel('$v_{}(t)$','interpreter','latex')                                 % States what the y axis is called
set(get(gca, 'YLabel'), 'Rotation', 0);                                     % Makes it vertical opposed to horizontal
ylabh = get(gca,'ylabel');                                                   
set(ylabh,'Units','normalized');                                            % Normalised units as opposed to datapoints
set(ylabh,'position',get(ylabh,'position') - [0.04 0.1 0]);                 % Moves the y axis label further left and down [x,y,z] - coordinates

subplot(5,1,4);
plot(time, PWM_191_2); 
% title('CH1: Emitter PWM = 191');
xlim([10.73 10.74])                                          % Sets xaxis limits to the 3 cycles
% set(gca,'TickLabelInterpreter', 'latex');                                   % Sets font to latex (set this to font used in your document)
% xticks([-2*10^-4 -1*10^-4 0 1*10^-4 2*10^-4 3*10^-4]);             % Set points on x axis to where labels will occur
% xticklabels({'$-2$', '$-1$','$0$', '$1$', '$2$', '$3$'})     % Sets what will be shown at each point
% ylim([-0.5 5])% Set yaxis between 0 to 1
% CH1max=max(channel_1);
% CH1min=min(channel_1);
% yticks([CH1min 2.5 CH1max])                                                               % Set points on y axis to where labels will occur                 
% yticklabels({'$Symbol Low $','$ $','$Symbol High $'}) 

box off   % Show only the X and Y axis

ylabel('$v_{}(t)$','interpreter','latex')                                 % States what the y axis is called
set(get(gca, 'YLabel'), 'Rotation', 0);                                     % Makes it vertical opposed to horizontal
ylabh = get(gca,'ylabel');                                                   
set(ylabh,'Units','normalized');                                            % Normalised units as opposed to datapoints
set(ylabh,'position',get(ylabh,'position') - [0.04 0.1 0]);                 % Moves the y axis label further left and down [x,y,z] - coordinates

subplot(5,1,5);
plot(time, PWM_255_2); 
% title('CH1: Emitter PWM = 255');
xlim([10.73 10.74])                                           % Sets xaxis limits to the 3 cycles
% set(gca,'TickLabelInterpreter', 'latex');                                   % Sets font to latex (set this to font used in your document)
% xticks([-2*10^-4 -1*10^-4 0 1*10^-4 2*10^-4 3*10^-4]);             % Set points on x axis to where labels will occur
% xticklabels({'$-2$', '$-1$','$0$', '$1$', '$2$', '$3$'})     % Sets what will be shown at each point
% ylim([-0.5 5])% Set yaxis between 0 to 1
% CH1max=max(channel_1);
% CH1min=min(channel_1);
% yticks([CH1min 2.5 CH1max])                                                               % Set points on y axis to where labels will occur                 
% yticklabels({'$Symbol Low $','$ $','$Symbol High $'}) 

box off   % Show only the X and Y axis

ylabel('$v_{}(t)$','interpreter','latex')                                 % States what the y axis is called
set(get(gca, 'YLabel'), 'Rotation', 0);                                     % Makes it vertical opposed to horizontal
ylabh = get(gca,'ylabel');                                                   
set(ylabh,'Units','normalized');                                            % Normalised units as opposed to datapoints
set(ylabh,'position',get(ylabh,'position') - [0.04 0.1 0]);                 % Moves the y axis label further left and down [x,y,z] - coordinates

xlabel('$t(s)$','interpreter','latex')  
% 
% 
% subplot(2,1,2);
% plot(time, channel_2);
% title('CH2: Photodiode');
% xlim([10.72 10.75])                                           % Sets xaxis limits to the 3 cycles
% % set(gca,'TickLabelInterpreter', 'latex');                                   % Sets font to latex (set this to font used in your document)
% % xticks([-2*10^-4 -1*10^-4 0 1*10^-4 2*10^-4 3*10^-4]);             % Set points on x axis to where labels will occur
% % xticklabels({'$-2$', '$-1$','$0$', '$1$', '$2$', '$3$'})     % Sets what will be shown at each point
% % ylim([-0.04 0.04])                                                                 % Set yaxis between 0 to 1
% % yticks([-0.02 0 0.02])                                                               % Set points on y axis to where labels will occur                 
% % yticklabels({'$-0.02v$','$0v$','$0.02v$'}) 
%                                 
% box off                                                                     % Show only the X and Y axis

xlabel('$t(s)$','interpreter','latex')  
ylabel('$v_{}(t)$','interpreter','latex')                                 % States what the y axis is called
set(get(gca, 'YLabel'), 'Rotation', 0);                                     % Makes it vertical opposed to horizontal
ylabh = get(gca,'ylabel');                                                   
set(ylabh,'Units','normalized');                                            % Normalised units as opposed to datapoints
set(ylabh,'position',get(ylabh,'position') - [0.04 0.1 0]);                 % Moves the y axis label further left and down [x,y,z] - coordinates

% % This changes the figure to conform to IEEE Standards

k_scaling = 2;          % scaling factor of the figure
k_width_hight = 2;      % width:hight ratio of the figure

width = 1.4* 8.8 * k_scaling;
hight = width / k_width_hight /1.4*0.7 ;
% figure margins
top = 0.5;  % normalized top margin
bottom = 3;	% normalized bottom margin
left = 3.5;	% normalized left margin
right = 1;  % normalized right margin

% set default figure configurations
set(0,'defaultFigureUnits','centimeters');
set(0,'defaultFigurePosition',[0 0 width hight]);

set(0,'defaultLineLineWidth',0.5*k_scaling);
set(0,'defaultAxesLineWidth',0.25*k_scaling);

set(0,'defaultAxesGridLineStyle',':');
set(0,'defaultAxesYGrid','on');
set(0,'defaultAxesXGrid','on');

set(0,'defaultAxesFontName','Times New Roman');
set(0,'defaultAxesFontSize',1.5*5*k_scaling);

set(0,'defaultAxesUnits','normalized');
set(0,'defaultAxesPosition',[left/width bottom/hight (width-left-right)/width  (hight-bottom-top)/hight]);

set(0,'defaultAxesColorOrder',[0 0 0]);
set(0,'defaultAxesTickDir','out');

set(0,'defaultFigurePaperPositionMode','auto');

% you can change the Legend Location to whatever as you wish
set(0,'defaultLegendLocation','southeast');
set(0,'defaultLegendBox','on');
set(0,'defaultLegendOrientation','vertical');

% file_print_name=[x, 'png'];
% print(1, '-dpng', file_print_name, '-r300')

% % This saves the figure as a PNG. Usually we use vector formats in academia
% % because papers are published online and this allows you to zoom. For
% % printed copies, we can just save as a PNG and set the resolution quite
% % high. This will give 300 DPI. Setting it at r0 would give screen
% % resolution.
